name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
      - name: Build sdist and wheel
        run: |
          python -m build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          print-hash: true
          skip-existing: true

  mark-pypi-deployment:
    needs: publish-pypi
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/alloy-ai/
    steps:
      - name: Mark PyPI deployment as successful
        run: echo "PyPI publish completed; marking deployment green."

  github-release:
    needs: publish-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
      - name: Create GitHub Release with notes file (if present)
        if: ${{ hashFiles(format('.github/release-notes/{0}.md', github.ref_name)) != '' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body_path: .github/release-notes/${{ github.ref_name }}.md
      - name: Create GitHub Release with generated notes (fallback)
        if: ${{ hashFiles(format('.github/release-notes/{0}.md', github.ref_name)) == '' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
